@mixin MQ($canvas) {
  @if $canvas == XS {
    @media only screen and (min-width: $XS) and (max-width: ((map-get($grid-S, grid-size) - 1)/$base-font-size-px)*1em) { @content; }
  }
  @else if $canvas == S {
    @media only screen and (min-width: $S) and (max-width: (($grid-width-S-landscape - 1)/$base-font-size-px)*1em) { @content; }
  }
   @else if $canvas == Slan {
    @media only screen and (min-width: $Slan) and (max-width: ((map-get($grid-M, grid-size) - 1)/$base-font-size-px)*1em) { @content; }
  }
  @else if $canvas == M {
    @media only screen and (min-width: $M) and (max-width: ((map-get($grid-L, grid-size) - 1)/$base-font-size-px)*1em) { @content; }
  }
  @else if $canvas == L {
    @media only screen and (min-width: $L) and (max-width: ((map-get($grid-XL, grid-size) - 1)/$base-font-size-px)*1em) { @content; }
  }
  @else if $canvas == XL {
    @media only screen and (min-width: $XL) and (max-width: $XXL - 1) { @content; }
  }
  @else if $canvas == XSplus {
    @media only screen and (min-width: $XS) { @content; }
  }
  @else if $canvas == Splus {
    @media only screen and (min-width: $S) { @content; }
  }
  @else if $canvas == Slanplus {
    @media only screen and (min-width: $Slan) { @content; }
  }
  @else if $canvas == Mplus {
    @media only screen and (min-width: $M) { @content; }
  }
  @else if $canvas == Lplus {
    @media only screen and (min-width: $L) { @content; }
  }
  @else if $canvas == XLplus {
    @media only screen and (min-width: $XL) { @content; }
  }
  @else if $canvas == XSneg {
    @media only screen and (max-width: $XS) { @content; }
  }
  @else if $canvas == Sneg {
    @media only screen and (max-width: $S) { @content; }
  }
  @else if $canvas == Slanneg {
    @media only screen and (max-width: $Slan) { @content; }
  }
  @else if $canvas == Mneg {
    @media only screen and (max-width: $M) { @content; }
  }
  @else if $canvas == Lneg {
    @media only screen and (max-width: $L) { @content; }
  }
  @else if $canvas == XLneg {
    @media only screen and (max-width: $XL) { @content; }
  }
  @else if $canvas == StoL {
    @media only screen and (min-width: $S) and (max-width: $L - 1) { @content; }
  }
  @else if $canvas == StoM {
    @media only screen and (min-width: $S) and (max-width: (($grid-width-M - 1)/$base-font-size-px)*1em) { @content; }
  }
  @else {
    // Pass through a custom breakpoint
    $canvas: strip-unit($canvas)/$base-font-size-px*1em; // converty to ems
    @media only screen and (min-width: $canvas) { @content; }
  }
}

// Grid Mixins
@mixin grid($col-span, $grid-size) {
  // Get the required grid settings
  $grid: get-grid-settings($grid-size, $col-span);
  margin-right: (map-get($grid, gutter-width)) / (map-get($grid, grid-width)) * 100%;
  width: (map-get($grid, width)) / (map-get($grid, grid-width)) * 100%;
}

@mixin grid-push($push-size, $grid-size) {
  $grid: get-grid-settings($grid-size, $push-size); // Get the grid context
  $push: (map-get($grid, col-width) * $push-size) + (map-get($grid, gutter-width) * $push-size - 1); // Calculate % to push by
  $push: ($push / map-get($grid, grid-width)) * 100%;
  margin-left: $push;
}